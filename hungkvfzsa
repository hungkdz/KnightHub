local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:FindFirstChildOfClass("Humanoid")

-- Load Fluent UI Library
local Library = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveData = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()

if not Library then
    warn("Fluent library failed to load.")
    return
end

local Window = Library:CreateWindow({
    Title = "Knight Hub",
    SubTitle = "By HungK",
    TabWidth = 160,
    Size = UDim2.fromOffset(480, 370),
    Acrylic = true,
    Theme = "Dark"
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main Farm" }),
}

-- Tạo Toggle cho Auto Quest
local Toggle = Tabs.Main:AddToggle("MyToggle", { Title = "Auto Quest", Default = false })
_G.AutoQuest = false  

Toggle:OnChanged(function()
    _G.AutoQuest = Toggle.Value  
    if _G.AutoQuest then
        while _G.AutoQuest do
            GetQuest()
            task.wait(5)  
        end
    end
end)

Toggle:SetValue(false)

-- 🚀 Tốc độ di chuyển (175 studs/giây)
local speed = 175  
local hasReceivedFirstQuest = false  

-- 🏃‍♂️ Hàm Tween nhân vật đến vị trí đích (Giữ nguyên hướng camera)
function TweenToPosition(targetPosition)
    local tweenTime = (humanoidRootPart.Position - targetPosition).Magnitude / speed
    local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    
    -- Dữ liệu tween CFrame chỉ thay đổi vị trí, giữ nguyên góc quay của camera
    local targetCFrame = CFrame.new(targetPosition, humanoidRootPart.Position + humanoidRootPart.CFrame.LookVector)

    local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = targetCFrame})
    tween:Play()
    tween.Completed:Wait()

    humanoidRootPart.CFrame = targetCFrame
    humanoid:MoveTo(targetPosition)
    task.wait(0.1)
end

-- 🏆 Hàm nhận nhiệm vụ dựa trên cấp độ
function GetQuest()
    if not player.Data or not player.Data:FindFirstChild("Level") then return end

    local level = player.Data.Level.Value  
    local NameQuest, LevelQ, CFQ

    if level >= 1 and level <= 9 then
        NameQuest = "BanditQuest1"
        LevelQ = 1
        CFQ = CFrame.new(1050, 16, 1540)  
    elseif level >= 10 and level <= 14 then
        NameQuest = "JungleQuest"
        LevelQ = 1
        CFQ = CFrame.new(-1600, 36, 150)  
    elseif level >= 15 and level <= 29 then
        NameQuest = "JungleQuest"
        LevelQ = 2
        CFQ = CFrame.new(-1600, 36, 150)  
    elseif level >= 30 and level <= 39 then
        NameQuest = "BuggyQuest1"
        LevelQ = 1
        CFQ = CFrame.new(-1130, 4, 3820)  
    elseif level >= 40 and level <= 59 then
        NameQuest = "BuggyQuest1"
        LevelQ = 2
        CFQ = CFrame.new(-1140.176, 4.752, 3827.405)  
    else
        return
    end

    local questFrame = player.PlayerGui:FindFirstChild("Main") and player.PlayerGui.Main:FindFirstChild("Quest")
    local hasQuest = questFrame and questFrame.Visible

    if not hasReceivedFirstQuest then
        hasReceivedFirstQuest = true
        TweenToPosition(CFQ.Position)
        pcall(function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("StartQuest", NameQuest, LevelQ)
        end)
        return
    end

    if hasQuest then return end

    TweenToPosition(CFQ.Position)
    pcall(function()
        ReplicatedStorage.Remotes.CommF_:InvokeServer("StartQuest", NameQuest, LevelQ)
    end)
end
