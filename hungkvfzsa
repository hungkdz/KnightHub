-- üßÆ Khai b√°o d·ªãch v·ª•
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local character
local humanoidRootPart
local humanoid
local noclip = false
local isFirstToggle = true

local function onCharacterAdded(char)
    character = char
    humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    humanoid = character:FindFirstChildOfClass("Humanoid")
end

player.CharacterAdded:Connect(onCharacterAdded)
if player.Character then
    onCharacterAdded(player.Character)
end

-- üî¶ Load Fluent UI
local Library = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveData = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()

if not Library then
    warn("Fluent UI kh√¥ng t·∫£i ƒë∆∞·ª£c!")
    return
end

local Window = Library:CreateWindow({
    Title = "Knight Hub",
    SubTitle = "By HungK",
    TabWidth = 160,
    Size = UDim2.fromOffset(480, 370),
    Acrylic = true,
    Theme = "Dark"
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main Farm" })
}

-- üéõÔ∏è Th√™m Toggle Auto Quest
local Toggle = Tabs.Main:AddToggle("MyToggle", { Title = "Auto Quest", Default = false })
_G.AutoQuest = false  

Toggle:OnChanged(function()
    _G.AutoQuest = Toggle.Value  
    if _G.AutoQuest then
        if isFirstToggle then
            isFirstToggle = false
            task.wait(3) -- ƒê·ª£i 3 gi√¢y tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu
        end
        while _G.AutoQuest do
            task.wait(5)  
            if CheckQuestMismatch() then
                GetQuest()
            end
        end
    end
end)

-- üèÉ‚Äç‚ôÇÔ∏è Fix rung camera, NoClip v√† l·ªói t·ªëc ƒë·ªô khi di chuy·ªÉn b·∫±ng Tween
function TweenToPosition(targetPosition)
    if not humanoidRootPart or not humanoid then return end

    local magnitude = (targetPosition - humanoidRootPart.Position).Magnitude
    if magnitude < 5 then return end -- Kh√¥ng tween n·∫øu kho·∫£ng c√°ch qu√° g·∫ßn

    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.MaxForce = Vector3.new(1e6, 1e6, 1e6)
    bodyVelocity.Parent = humanoidRootPart

    noclip = true -- B·∫≠t NoClip
    
    local tweenTime = magnitude / 300  
    local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local tween = TweenService:Create(humanoidRootPart, tweenInfo, { CFrame = CFrame.new(targetPosition) })
    
    tween:Play()
    tween.Completed:Wait()
    
    bodyVelocity:Destroy()
    humanoidRootPart.CFrame = CFrame.new(targetPosition)
    noclip = false -- T·∫Øt NoClip
    task.wait(0.5)
end

-- üèÜ Ki·ªÉm tra nhi·ªám v·ª• c√≥ ph√π h·ª£p v·ªõi level hi·ªán t·∫°i kh√¥ng
function CheckQuestMismatch()
    if not player.Data or not player.Data:FindFirstChild("Level") then return false end
    local level = player.Data.Level.Value  
    local questFrame = player.PlayerGui:FindFirstChild("Main") and player.PlayerGui.Main:FindFirstChild("Quest")
    if questFrame and questFrame.Visible then
        local currentQuestName = questFrame.Title.Text -- Gi·∫£ s·ª≠ t√™n nhi·ªám v·ª• hi·ªÉn th·ªã ·ªü ƒë√¢y
        local expectedQuestName = GetExpectedQuestName(level)
        return currentQuestName ~= expectedQuestName
    end
    return false
end

-- üèÜ Nh·∫≠n nhi·ªám v·ª•
function GetQuest()
    if not player.Data or not player.Data:FindFirstChild("Level") then return end
    local level = player.Data.Level.Value  
    local NameQuest, LevelQ, CFQ

    if level >= 1 and level <= 9 then
        NameQuest = "BanditQuest1"
        LevelQ = 1
        CFQ = CFrame.new(1050, 16, 1540)  
    elseif level >= 10 and level <= 14 then
        NameQuest = "JungleQuest"
        LevelQ = 1
        CFQ = CFrame.new(-1600, 36, 150)  
    elseif level >= 15 and level <= 29 then
        NameQuest = "JungleQuest"
        LevelQ = 2
        CFQ = CFrame.new(-1600, 36, 150)  
    elseif level >= 30 and level <= 39 then
        NameQuest = "BuggyQuest1"
        LevelQ = 1
        CFQ = CFrame.new(-1130, 4, 3820)  
    elseif level >= 40 and level <= 59 then
        NameQuest = "BuggyQuest1"
        LevelQ = 2
        CFQ = CFrame.new(-1140.176, 4.752, 3827.405)  
    else
        return
    end

    -- üîÑ Ki·ªÉm tra nhi·ªám v·ª• tr∆∞·ªõc khi d·ªãch chuy·ªÉn
    if not CheckQuestMismatch() then
        return
    end
    
    task.wait(3) -- ƒê·ª£i tr∆∞·ªõc khi tween
    
    if humanoidRootPart then
        TweenToPosition(Vector3.new(CFQ.X, CFQ.Y, CFQ.Z))
    else
        return
    end
    
    local distance = (humanoidRootPart.Position - Vector3.new(CFQ.X, CFQ.Y, CFQ.Z)).Magnitude
    if distance > 5 then
        return
    end
    
    pcall(function()
        ReplicatedStorage.Remotes.CommF_:InvokeServer("StartQuest", NameQuest, LevelQ)
    end)
end
