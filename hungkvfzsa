-- üõ† Khai b√°o d·ªãch v·ª•
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:FindFirstChildOfClass("Humanoid")

-- üñ• Load Fluent UI
local Library = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveData = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()

if not Library then
    warn("Fluent UI kh√¥ng t·∫£i ƒë∆∞·ª£c!")
    return
end

local Window = Library:CreateWindow({
    Title = "Knight Hub",
    SubTitle = "By HungK",
    TabWidth = 160,
    Size = UDim2.fromOffset(480, 370),
    Acrylic = true,
    Theme = "Dark"
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main Farm" })
}

-- üéõÔ∏è Th√™m Toggle Auto Quest
local Toggle = Tabs.Main:AddToggle("MyToggle", { Title = "Auto Quest", Default = false })
_G.AutoQuest = false  

Toggle:OnChanged(function()
    _G.AutoQuest = Toggle.Value  
    if _G.AutoQuest then
        task.spawn(function()
            while _G.AutoQuest do
                GetQuest()
                task.wait(5)
            end
        end)
    end
end)

-- üèÉ‚Äç‚ôÇÔ∏è Fix rung camera khi di chuy·ªÉn
function TweenToPosition(targetPosition)
    if not humanoidRootPart then return end

    local speed = 175  
    local tweenTime = (humanoidRootPart.Position - targetPosition).Magnitude / speed

    local targetCFrame = CFrame.new(
        targetPosition.X, humanoidRootPart.Position.Y, targetPosition.Z,
        humanoidRootPart.CFrame:ToEulerAnglesYXZ()
    )

    local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = targetCFrame})

    tween:Play()
    tween.Completed:Wait()
    humanoidRootPart.CFrame = targetCFrame
    humanoid:MoveTo(targetPosition)
end

-- üöÄ H√†m bay ƒë·∫øn v·ªã tr√≠ NPC nh·∫≠n nhi·ªám v·ª•
function FlyToPosition(targetPosition)
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    for _, obj in ipairs(hrp:GetChildren()) do
        if obj:IsA("BodyVelocity") or obj:IsA("AlignPosition") then
            obj:Destroy()
        end
    end

    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Velocity = (targetPosition - hrp.Position).unit * 100 
    bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    bodyVelocity.Parent = hrp

    repeat task.wait() until (hrp.Position - targetPosition).Magnitude < 5
    bodyVelocity:Destroy()
    hrp.CFrame = CFrame.new(targetPosition)
end

-- üèÜ Nh·∫≠n nhi·ªám v·ª•
function GetQuest()
    if not player.Data or not player.Data:FindFirstChild("Level") then return end

    local level = player.Data.Level.Value  
    local NameQuest, LevelQ, CFQ

    if level >= 1 and level <= 9 then
        NameQuest = "BanditQuest1"
        LevelQ = 1
        CFQ = CFrame.new(1050, 16, 1540)  
    elseif level >= 10 and level <= 14 then
        NameQuest = "JungleQuest"
        LevelQ = 1
        CFQ = CFrame.new(-1600, 36, 150)  
    elseif level >= 15 and level <= 29 then
        NameQuest = "JungleQuest"
        LevelQ = 2
        CFQ = CFrame.new(-1600, 36, 150)  
    elseif level >= 30 and level <= 39 then
        NameQuest = "BuggyQuest1"
        LevelQ = 1
        CFQ = CFrame.new(-1130, 4, 3820)  
    elseif level >= 40 and level <= 59 then
        NameQuest = "BuggyQuest1"
        LevelQ = 2
        CFQ = CFrame.new(-1140.176, 4.752, 3827.405)  
    else
        return
    end

    -- üõë Ki·ªÉm tra n·∫øu ƒë√£ c√≥ nhi·ªám v·ª•
    local questFrame = player.PlayerGui:FindFirstChild("Main") and player.PlayerGui.Main:FindFirstChild("Quest")
    local hasQuest = questFrame and questFrame.Visible

    if not hasQuest then
        FlyToPosition(CFQ.Position)
        task.wait(0.5)
        
        pcall(function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("StartQuest", NameQuest, LevelQ)
        end)
    end
end
