local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveData = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local UserInputService = game:GetService("UserInputService")

local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local player = game.Players.LocalPlayer or game.Players.PlayerAdded:Wait()
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = Workspace:WaitForChild(player.Name):FindFirstChildOfClass("Humanoid")

if not Fluent then
    warn("Fluent library failed to load.")
    return
end

local Window = Fluent:CreateWindow({
    Title = "Knight Hub",
    SubTitle = "Dead Rails Script",
    TabWidth = 160,
    Size = UDim2.fromOffset(480, 370),
    Acrylic = true,
    Theme = "Dark"
})

local ic = Instance.new("ScreenGui")
ic.Parent = game.CoreGui
ic.Name = "knight"
ic.ClipToDeviceSafeArea = true
ic.Enabled = true
ic.ResetOnSpawn = true
ic.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ic.Archivable = true
ic.AutoLocalize = true

-- Create Frame
local ic2 = Instance.new("Frame")
ic2.Parent = ic
ic2.Name = "dz"
ic2.AnchorPoint = Vector2.new(0, 1)
ic2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ic2.BackgroundTransparency = 0
ic2.BorderSizePixel = 1
ic2.Position = UDim2.new(0, 15, 0.2, 5)
ic2.Size = UDim2.new(0, 50, 0, 50)

-- Round corners
local ic3 = Instance.new("UICorner")
ic3.CornerRadius = UDim.new(1, 0)
ic3.Archivable = true
ic3.Parent = ic2

-- TextButton
local ic4 = Instance.new("TextButton")
ic4.Parent = ic2
ic4.Active = true
ic4.AnchorPoint = Vector2.new(0, 0)
ic4.BackgroundTransparency = 1
ic4.Size = UDim2.new(1, 0, 1, 0)
ic4.Text = ""

-- ImageLabel
local ic5 = Instance.new("ImageLabel")
ic5.Parent = ic2
ic5.AnchorPoint = Vector2.new(0.5, 0.5)
ic5.BackgroundTransparency = 1
ic5.Position = UDim2.new(0.5, 0, 0.5, 0)
ic5.Size = UDim2.new(0, 40, 0, 40)
ic5.Image = "rbxassetid://71222902950411" -- Ensure this is a valid image ID

-- Minimize the window when the TextButton (ic4) is clicked
local originalImageSize = UDim2.new(0, 30, 0, 30)
local originalFrameBackgroundTransparency = 0.25
local newImageSize = UDim2.new(0, 40, 0, 40)
local newFrameBackgroundTransparency = 0

local isOriginalState = true

-- Sự kiện MouseButton1Click cho TextButton
ic4.MouseButton1Click:Connect(function()
    Window:Minimize()

    if isOriginalState then
        -- Thay đổi các thuộc tính sang trạng thái mới
        ic5.Size = newImageSize
        ic2.BackgroundTransparency = newFrameBackgroundTransparency
    else
        -- Khôi phục các thuộc tính về trạng thái gốc
        ic5.Size = originalImageSize
        ic2.BackgroundTransparency = originalFrameBackgroundTransparency
    end

    isOriginalState = not isOriginalState
end)

-- Minimize the window when the Left Control key is pressed
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end  -- Ignore if the input is processed by the game
    if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.LeftControl then
        -- Minimize the window
        Window:Minimize()

        if isOriginalState then
            -- Change the properties when minimized
            ic5.Size = newImageSize
            ic2.BackgroundTransparency = newFrameBackgroundTransparency
        else
            -- Reset the properties when not minimized
            ic5.Size = originalImageSize
            ic2.BackgroundTransparency = originalFrameBackgroundTransparency
        end

        isOriginalState = not isOriginalState
    end
end)

local Tabs = {
    Main = Window:AddTab({ Title = "Main Farm" }),
    ClassShop = Window:AddTab({ Title = "Class Shop" }),
    TrainShop = Window:AddTab({ Title = "Train Shop" })
}

Tabs.Main:AddButton({
    Title = "Unlock Camera",
    Callback = function()
        player.CameraMode = Enum.CameraMode.Classic
    end
})

local noclipConnection

Tabs.Main:AddButton({
    Title = "Noclip",
    Callback = function()
        if noclipConnection then
            noclipConnection:Disconnect()
        end

        noclipConnection = game:GetService("RunService").Stepped:Connect(function()
            local character = player.Character
            if character then
                for _, part in ipairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end)
    end
})

Tabs.Main:AddButton({
    Title = "JumpPower Boost",
    Callback = function()
        humanoid.JumpPower = 68
        humanoid.UseJumpPower = true
    end
})







Tabs.ClassShop:AddButton({
    Title = "Equip None",
    Callback = function()
        local args = {
            "None"
        }
        
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip Horse",
    Callback = function()
        local args = {
            "Horse"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip Musician",
    Callback = function()
        local args = {
            "Musician"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip Miner",
    Callback = function()
        local args = {
            "Miner"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip Doctor",
    Callback = function()
        local args = {
            "Doctor"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip Arsonist",
    Callback = function()
        local args = {
            "Arsonist"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip Packmaster",
    Callback = function()
        local args = {
            "Packmaster"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip Necromancer",
    Callback = function()
        local args = {
            "Necromancer"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip Conductor",
    Callback = function()
        local args = {
            "Conductor"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip Werewolf",
    Callback = function()
        local args = {
            "Werewolf"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip The Alamo",
    Callback = function()
        local args = {
            "Alamo"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip Cowboy",
    Callback = function()
        local args = {
            "Cowboy"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip High Roller",
    Callback = function()
        local args = {
            "HighRoller"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip Priest",
    Callback = function()
        local args = {
            "Priest"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip Zombie",
    Callback = function()
        local args = {
            "Zombie"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip Vampire",
    Callback = function()
        local args = {
            "Vampire"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip Survivalist",
    Callback = function()
        local args = {
            "Survivalist"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})

Tabs.ClassShop:AddButton({
    Title = "Equip Ironclad",
    Callback = function()
        local args = {
            "Ironclad"
        }
        
        local BClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyClass")
        local EClass = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipClass")
        
        BClass:FireServer(unpack(args))
        EClass:FireServer(unpack(args))
    end
})




Tabs.TrainShop:AddButton({
    Title = "Equip Cattle Car",
    Callback = function()
        local args = {
            "cattle"
        }

        local BTrain = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyTrain")
        local ETrain = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipTrain")
        
        BTrain:FireServer(unpack(args))
        ETrain:FireServer(unpack(args))
    end
})

Tabs.TrainShop:AddButton({
    Title = "Equip Gold Rush",
    Callback = function()
        local args = {
            "golden"
        }

        local BTrain = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyTrain")
        local ETrain = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipTrain")
        
        BTrain:FireServer(unpack(args))
        ETrain:FireServer(unpack(args))
    end
})

Tabs.TrainShop:AddButton({
    Title = "Equip Armored Train",
    Callback = function()
        local args = {
            "armored"
        }

        local BTrain = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyTrain")
        local ETrain = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipTrain")
        
        BTrain:FireServer(unpack(args))
        ETrain:FireServer(unpack(args))
    end
})

Tabs.TrainShop:AddButton({
    Title = "Equip Default",
    Callback = function()
        local args = {
            "default"
        }

        local BTrain = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("BuyTrain")
        local ETrain = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Network"):WaitForChild("RemoteEvent"):WaitForChild("EquipTrain")
        
        BTrain:FireServer(unpack(args))
        ETrain:FireServer(unpack(args))
    end
})
