-- üõ† Khai b√°o d·ªãch v·ª•
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:FindFirstChildOfClass("Humanoid")

local function onCharacterAdded(char)
    character = char
    humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    humanoid = character:FindFirstChildOfClass("Humanoid")
end

player.CharacterAdded:Connect(onCharacterAdded)

-- üñ• Load Fluent UI
local Library = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Window = Library:CreateWindow({ Title = "Knight Hub", SubTitle = "By HungK", Size = UDim2.fromOffset(480, 370), Theme = "Dark" })

local Tabs = { Main = Window:AddTab({ Title = "Main Farm" }) }
local Toggle = Tabs.Main:AddToggle("MyToggle", { Title = "Farm Level", Default = false })

_G.FarmLevel = false

Toggle:OnChanged(function()
    _G.FarmLevel = Toggle.Value
    print("Farm Level toggled:", _G.FarmLevel)
    if _G.FarmLevel then
        while _G.FarmLevel do
            GetQuest()
            task.wait(0.1)
        end
    end
end)

-- üìå Ki·ªÉm tra nh√¢n v·∫≠t c√≥ nhi·ªám v·ª• kh√¥ng
function HasActiveQuest()
    local questFrame = player.PlayerGui:FindFirstChild("Main") and player.PlayerGui.Main:FindFirstChild("Quest")
    return questFrame and questFrame.Visible
end

-- üèÉ‚Äç‚ôÇÔ∏è Tween ƒë·∫øn v·ªã tr√≠ m∆∞·ª£t h∆°n
function TweenToPosition(targetPosition)
    if not humanoidRootPart or not humanoid or not _G.FarmLevel then return end

    print("Di chuy·ªÉn ƒë·∫øn:", targetPosition)

    local distance = (targetPosition - humanoidRootPart.Position).Magnitude
    if distance < 5 then return end  

    local tweenInfo = TweenInfo.new(distance / 185, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local tween = TweenService:Create(humanoidRootPart, tweenInfo, { CFrame = CFrame.new(targetPosition) })

    tween:Play()
    tween.Completed:Wait()
end

-- üìå Qu√©t qu√°i trong ph·∫°m vi 125
function FindMobs()
    local mobs = {}
    for _, v in pairs(Workspace:GetChildren()) do
        if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
            if v.Name == Ms and (v.HumanoidRootPart.Position - humanoidRootPart.Position).Magnitude <= 125 then
                table.insert(mobs, v)
            end
        end
    end
    print("S·ªë l∆∞·ª£ng qu√°i t√¨m th·∫•y:", #mobs)
    return mobs
end

-- üìå Gom qu√°i v·ªÅ ƒë√∫ng v·ªã tr√≠ X, Z c·ªßa CFT, gi·ªØ nguy√™n Y
function GatherMobs(targetCFrame)
    local mobs = FindMobs()
    if #mobs == 0 then return end

    print("Gom qu√°i v√†o:", targetCFrame.Position)

    for _, mob in pairs(mobs) do
        if mob:FindFirstChild("HumanoidRootPart") then
            local targetPos = Vector3.new(targetCFrame.Position.X, mob.HumanoidRootPart.Position.Y, targetCFrame.Position.Z)
            local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
            local tween = TweenService:Create(mob.HumanoidRootPart, tweenInfo, { Position = targetPos })
            tween:Play()
        end
    end
end

-- üìå Ch·ªù qu√°i ch·∫øt h·∫øt tr∆∞·ªõc khi di chuy·ªÉn ti·∫øp
function WaitForMobsToDie()
    while _G.FarmLevel do
        local mobs = FindMobs()
        if #mobs == 0 then break end
        task.wait(1)
    end
end

-- üèÜ Nh·∫≠n nhi·ªám v·ª• v√† farm qu√°i
function GetQuest()
    if not player.Data or not player.Data:FindFirstChild("Level") then return end

    local level = player.Data.Level.Value  
    print("Level hi·ªán t·∫°i:", level)

    local NameQuest, LevelQ, CFQ

    if level >= 1 and level <= 9 then
        NameQuest = "BanditQuest1"
        LevelQ = 1
        CFT = {CFrame.new(943, 40, 1562), CFrame.new(1115, 40, 1619)}
        CFQ = CFrame.new(1050, 16, 1540)  
        Ms = "Bandit"
    elseif level >= 10 and level <= 14 then
        NameQuest = "JungleQuest"
        LevelQ = 1
        CFT = {CFrame.new(-1673, 30, -73), CFrame.new(-1570, 30, 339)}
        CFQ = CFrame.new(-1600, 36, 150)  
        Ms = "Monkey"
    else
        print("Kh√¥ng c√≥ nhi·ªám v·ª• ph√π h·ª£p!")
        return
    end

    if not HasActiveQuest() or LastQuest ~= NameQuest then
        LastQuest = NameQuest
        print("Nh·∫≠n nhi·ªám v·ª•:", NameQuest)
        TweenToPosition(CFQ.Position)

        if (humanoidRootPart.Position - CFQ.Position).Magnitude > 5 then return end

        local success = pcall(function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("StartQuest", NameQuest, LevelQ)
        end)

        if success then
            LastQuest = NameQuest
        end
    end

    -- üîÑ B·∫Øt ƒë·∫ßu Farm
    for _, cft in ipairs(CFT) do
        if not _G.FarmLevel then break end

        print("Di chuy·ªÉn ƒë·∫øn v·ªã tr√≠ farm:", cft.Position)
        TweenToPosition(cft.Position)
        task.wait(math.random(1, 2))

        GatherMobs(cft)
        WaitForMobsToDie()
    end
end
